#include <stdio.h>
#include <stdbool.h>

#define MAX_N 20

int board[MAX_N][MAX_N];
int N;

void printSolution() {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++) {
            printf("%c ", board[i][j] ? 'Q' : '-');
        }
        printf("\n");
    }
    printf("\n");
}

bool isSafe(int row, int col) {
    int i, j;

    for (i = 0; i < col; i++) {
        if (board[row][i]) {
            return false;
        }
    }

    for (i = row, j = col; i >= 0 && j >= 0; i--, j--) {
        if (board[i][j]) {
            return false;
        }
    }

    for (i = row, j = col; j >= 0 && i < N; i++, j--) {
        if (board[i][j]) {
            return false;
        }
    }

    return true;
}

bool solveNQueensUtil(int col) {
    if (col == N) {
        printSolution();
        return true;
    }

    for (int i = 0; i < N; i++) {
        if (isSafe(i, col)) {
            board[i][col] = 1;
            if (solveNQueensUtil(col + 1)) {
                return true;
            }
            board[i][col] = 0; 
        }
    }

    return false;
}

void solveNQueens() {
    printf("Enter the board size (N): ");
    scanf("%d", &N);

    if (N <= 0 || N > MAX_N) {
        printf("Invalid board size. Please enter a positive value less than or equal to %d.\n", MAX_N);
        return;
    }

    if (!solveNQueensUtil(0)) {
        printf("Solution does not exist for N = %d.\n", N);
    }
}

int main() {
    solveNQueens();
    return 0;
}
